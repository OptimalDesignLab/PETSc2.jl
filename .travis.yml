language: julia
os:
  - linux
julia:
  - 0.6
notifications:
  email: false

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install build-essential gfortran perl g++ gcc cmake m4 git
  - sudo apt-get install -y liblapack-dev liblapack3
  - sudo apt-get install -y libblas-dev libblas3
  - echo `pwd`
  - sudo ./deps/travis-install-mpi.sh mpich3
  # setting these variables will help cmake find MPI
  - export CC=mpicc
  - export FC=mpif90
  - export CXX=mpicxx

install:
  -  if [[ -a .git/shallow ]]; then git fetch --unshallow; fi 
  # Installing the package being tested on Travis is a little screwy.
  # Initially the package is in ~/build/OptimalDesignLab/PETSc2.jl, (which
  # is the initial pwd as well).
  # The Pkg.clone(pwd()) line below effectively copies the package from
  # the original location to ~/.julia/v0.6/PETSc2.
  # Now there are *2* copies of the package.  Running ./test/runtest.sh
  # runs runtest.sh file of the *original* copy, even though using PDESolver
  # loads the code in copy in ~/.julia/v0.6/PETSc2.
  - julia --check-bounds=yes -e 'versioninfo(); Pkg.clone(pwd())'
  - export PETSC_DIR=""  # avoid building petsc here
  - export PETSC_ARCH=""
  - julia -e 'Pkg.build("PETSc2")'
#  - julia -e 'Pkg.clone("https://github.com/OptimalDesignLab/PETSc2.jl.git")'
#  - cd ./PETSc2/
#  - julia ./deps/build.jl
  - unset PETSC_DIR  # have the tests build PETSc
  - unset PETSC_ARCH
  - cd ~/.julia/v0.6/PETSc2  # run the tests on the copy here
 
  
# uncomment the following lines to override the default test script
script:
  #  - cd ./deps
  #  - julia -e 'Pkg.init()'
  #  - julia ./build.jl
  #  - cd ..
  - echo $HOME
  - ./test/runtests.sh  # this builds PETSc
#  - julia --check-bounds=yes -e 'Pkg.clone(pwd()); Pkg.build("PETSc"); Pkg.test("PETSc"; coverage=true)'
#  - julia --check-bounds=yes ./test/test_singlereal.jl
